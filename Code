<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Snake Game</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    canvas {
        border: 1px solid #333;
        background-color: #fff;
    }
    .menu {
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }
    .menu h1 {
        margin-top: 0;
    }
    .menu button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    .menu button:hover {
        background-color: #45a049;
    }
</style>
</head>
<body>

<div class="menu" id="startMenu">
    <h1>Welcome to Snake Game</h1>
    <p>Use W, A, S, D keys to control the snake.</p>
    <button id="startButton">Start Game</button>
</div>

<div class="menu" id="gameOverMenu" style="display: none;">
    <h1>You died</h1>
    <p>Play again?</p>
    <button id="playAgainButton">Play Again</button>
</div>

<canvas id="gameCanvas" width="400" height="400" style="display: none;"></canvas>

<script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const gridSize = 20;
    let snake = [{ x: 10, y: 10 }];
    let food = { x: 15, y: 15 };
    let dx = 0;
    let dy = 0;
    let score = 0;
    let gameStarted = false;
    let gameLoop;

    function drawSnake() {
        ctx.fillStyle = "#00f";
        snake.forEach(segment => {
            ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
        });
    }

    function drawFood() {
        ctx.fillStyle = "#f00";
        ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize, gridSize);
    }

    function moveSnake() {
        const head = { x: snake[0].x + dx, y: snake[0].y + dy };
        snake.unshift(head);
        if (head.x === food.x && head.y === food.y) {
            score++;
            generateFood();
        } else {
            snake.pop();
        }
    }

    function generateFood() {
        food.x = Math.floor(Math.random() * (canvas.width / gridSize));
        food.y = Math.floor(Math.random() * (canvas.height / gridSize));
    }

    function checkCollision() {
        if (snake[0].x < 0 || snake[0].x >= canvas.width / gridSize ||
            snake[0].y < 0 || snake[0].y >= canvas.height / gridSize) {
            return true;
        }
        for (let i = 1; i < snake.length; i++) {
            if (snake[i].x === snake[0].x && snake[i].y === snake[0].y) {
                return true;
            }
        }
        return false;
    }

    function drawScore() {
        ctx.fillStyle = "#000";
        ctx.font = "20px Arial";
        ctx.fillText("Score: " + score, 10, 30);
    }

    function clearCanvas() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    function update() {
        clearCanvas();
        drawSnake();
        drawFood();
        drawScore();
        moveSnake();
        if (checkCollision()) {
            clearInterval(gameLoop); // Stop the game loop
            document.getElementById("gameOverMenu").style.display = "flex";
        }
    }

    document.getElementById("startButton").addEventListener("click", () => {
        document.getElementById("startMenu").style.display = "none";
        canvas.style.display = "block";
        gameStarted = true;
        gameLoop = setInterval(update, 100); // Start the game loop
    });

    document.getElementById("playAgainButton").addEventListener("click", () => {
        document.getElementById("gameOverMenu").style.display = "none"; // Hide the game over menu
        snake = [{ x: 10, y: 10 }]; // Reset snake position
        dx = 0;
        dy = 0;
        score = 0;
        gameStarted = true;
        gameLoop = setInterval(update, 100); // Restart the game loop
    });

    document.addEventListener("keydown", event => {
        const key = event.key.toLowerCase();
        if (gameStarted) {
            if (key === "w" && dy === 0) {
                dx = 0;
                dy = -1;
            } else if (key === "s" && dy === 0) {
                dx = 0;
                dy = 1;
            } else if (key === "a" && dx === 0) {
                dx = -1;
                dy = 0;
            } else if (key === "d" && dx === 0) {
                dx = 1;
                dy = 0;
            }
        }
    });
</script>

</body>
</html>
